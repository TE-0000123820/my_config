# ワンライナーお手軽実行するためのファイル
#
# {書き方}
#     （例）
#          [これはワンライナーです] oneliner | some-command | other-command
#
#     []のなかにそのワンライナーの説明を書きます（省いても構いません）
#     []の後ろに1つ以上のスペースをあけてワンライナーを書きます
#
# {@マークについて}
#     ワンライナー中に@マークを1つだけ記述することができます
#     実行時にその@マークの位置にカーソルが置かれます
#
# {!マークについて}
#     ワンライナーの行末に!マークを置くと、ワンライナーが即座に実行されます
#
# {#マークについて}
#     2種類の使用方法があります
#     行頭に置かれた場合、その行はfzfに表示されません
#     行中に置いた場合、それ以降をコメントとみなし黒色表示します
#     ただし、後者の場合#マークの前後にスペースを必要とします
#
# {:マークについて}
#     セクションごとのタイトルに最適です
#     シェルが無視してくれる記号には#と:があります
#     #は行頭にあるとfzfが無視しますが、:は問題無いです
#
: AED
[AED error test run] time bash ../tools/run_error_check_fixed_par.sh ~/file_list_all.new.txt@
[build] make clean gen_table gen_constraint_table FLOAT2FIXED=@1 && make clean all FLOAT2FIXED=1

: Halide
[Halide build sa] make CXX=g++-7 LLVM_CONFIG=llvm-config-3.8 CLANG=clang-3.8  -j8

: gcc
[gcc color] gcc -fdiagnostics-color=always
[g++ color] g++ -fdiagnostics-color=always

: perl
[perl reverse] perl -e 'print reverse <>'
[print hex] perl -e 'printf("0x%x\n", 100@);'
[print dec] perl -e 'printf("%d\n", 0x100@);'
[gen random] perl -e 'binmode STDOUT; for(my $i = 0; $i < 1024*1024@; $i+=4) { print pack("I1", int(rand(0xffffffff))); };' > random.bin

: sa
[sadb est us] perl -ne 'if(/Total=\s*(\d+)/) { print $1/396 ; }' log

: git
[git push] git push origin master@
[git push] git push origin develop@
[git submodule] git submodule update --init --recursive
[git change comment] git commit --amend

: tmux
[tmux kill window] echo "prefx &"
[tmux kill pane] echo "prefx x"

: misc
[edit misc] v ${MISC_DIR}/.zshrc
[export LD_LIBRARY_PATH] export LD_LIBRARY_PATH=@
[python ve setup] source ~/virtualenv_py36/bin/activate
[check current shell] readlink /proc/$$/exe
[check current shell bash] readlink /proc/$$/exe | grep bash
[check current shell bash if] if [ ! `readlink /proc/$$/exe | grep bash` ] ; then echo "ERROR: use bash" ; exit 1; fi; set -e -o pipefail
[redirect: file1と標準出力に全ログ、file2にフィルタリングしたログを出力する] command 2>&1 | tee >(grep -i error > file2) | tee file1
[show 256 color] for c in {000..255}; do echo -n "\e[38;5;${c}m $c" ; [ $(($c%16)) -eq 15 ] && echo;done;echo
[donwload http link] curl -LJO @ 
[edit this file] v ${MISC_DIR}/easy-oneliner.txt
[io監視] vmstat 2
[io監視] sudo iotop
[画像情報取得: image,info,size] identify a.jpg@
[画像サイズ変換: image,resize] convert -resize 1366x768@ input.png output.png
[windows, open file] cmd.exe /c start @
[zmv] noglob zmv -W -n @
[zmv, copy] noglob zmv -W -C -n @
[proxy] export https_proxy="https://proxy.osk.sony.co.jp:10080"
[dns] nameserver 43.4.54.16
[dns] nameserver 137.153.66.28
[dns] nameserver 137.153.112.2

: docker
[docker rmi] sudo docker rmi @
[docker rm] sudo docker rm @
[dcoker run] sudo docker run -it -d --name name image@
[dcoker exec] sudo docker exec -it sd@ /bin/bash
[dcoker run dns] docker run --dns 137.153.66.28@

: locale
[sudo locale-gen ja_JP] sudo locale-gen en_US.UTF-8@ ; sudo update-locale LANG=en_US.UTF-8

# vim:ft=sh
