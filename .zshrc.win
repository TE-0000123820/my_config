PROMPT_STR=$'%{\e[31m%}%n%{\e[m%}@%{\e[32m%}%m%{\e[m%}: %D{%Y/%m/%d %H:%M} %{\e[1;33m%}%~%{\e[m%}\n%# '
PS4_STR='[%D{%Y/%m/%d %H:%M:%S.%6.} ]+ '
PROMPT=${PROMPT_STR}
PS4=${PS4_STR}

#VIM=nvim
VIM=vim
export EDITOR=${VIM}
export PATH=~/bin:~/utils/:${PATH}
export TERM=xterm-256color
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export http_proxy="proxy.osk.sony.co.jp:10080"
export https_proxy="proxy.osk.sony.co.jp:10080"
export no_proxy=localhost,127.0.0.0/8,::1,gitlabce.misty.sdna.sony.co.jp,kc.misty.sdna.sony.co.jp
export PERL5LIB=${MISC_DIR}
export REPORTTIME=3

# dir color
eval `dircolors ${MISC_DIR}/.colorrc`

#
# cdr
#
# cdr, add-zsh-hook を有効にする
autoload -Uz chpwd_recent_dirs cdr add-zsh-hook
add-zsh-hook chpwd chpwd_recent_dirs
# cdr の設定
zstyle ':completion:*' recent-dirs-insert both
zstyle ':chpwd:*' recent-dirs-max 200
zstyle ':chpwd:*' recent-dirs-default true
zstyle ':chpwd:*' recent-dirs-file "$HOME/.cache/shell/chpwd-recent-dirs"
zstyle ':chpwd:*' recent-dirs-pushd true


#
# key binds
#
bindkey -e
function cd-up { zle push-line && LBUFFER='builtin cd ..' && zle accept-line }
zle -N cd-up
bindkey "^O" cd-up

#
# history settings {{{
#
HISTFILE="$HOME/.zhistory"
HISTSIZE=2000
SAVEHIST=2000
setopt append_history
setopt share_history
# }}}

autoload -Uz select-word-style
select-word-style default
zstyle ':zle:*' word-chars " _-./;@"
zstyle ':zle:*' word-style unspecified

autoload -Uz compinit && compinit
zstyle ':completion:*:default' menu select=1
zstyle ':completion::complete:*' use-cache true
#autoload -Uz colors && colors
#autoload -Uz zmv

setopt hist_ignore_all_dups
setopt hist_reduce_blanks
#setopt auto_pushd
setopt noautoremoveslash
setopt auto_param_slash
setopt magic_equal_subst
setopt auto_cd

ulimit -c 100000000
ulimit -s 1000000

#
# aliases {{{
#
alias b="bd"
alias bp="echo $'\a'"
alias btar="tar --use-compress-program=pbzip2"
alias btarc="tar --use-compress-program=pbzip2 -cf"
alias c="cd"
alias cmake="cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1"
alias df="df -h"
alias e='explorer'
function myfg() { fg %$1 }
alias f="myfg"
alias fdd="find -maxdepth 1 -type d | sort"
alias g="git"
alias gvim="env HOME=c:/Users/0000123820 gvim.exe"
alias j="jobs"
alias Kill='kill -9'
alias l="ls --color=auto -F"
alias ll="ls -l"
alias llh="ls -l -h"
alias m="make"
alias man='(){ tmpfile=$(mktemp); man $1 | col -b | bat -l Manpage -p > ${tmpfile} ; view ${tmpfile} -c ":set ft=man" ; rm ${tmpfile}}'
alias md='md5sum'
alias p2="python2"
alias p3="python3"
alias p="python"
alias perl="perl -W"
alias pd="popd"
alias rg="rg --color=always"
alias s="source"
alias ssh='ssh -Y'
alias t="tmux -u"
alias ta="t a"
alias tig="env LANG=ja_JP.UTF-8 tig status"
alias ul="ulimit -c 1000000000"
alias ulimc="ulimit -c 1000000000"
v () {
    if [ "$#" = "0" ] ; then
        ${VIM} -c ":History"
        echo MRU
    else
        ${VIM} $*
    fi
}
alias vc="${VIM} -c AnsiEsc"
alias vd="${VIM} -d"
alias vg="vimgit"
alias vgd="${VIM} -c \":Gdiff\""
alias vimgit="${VIM} -c \":Gstatus\""
alias xtar="tar --use-compress-prog=pxz"
alias xtarc="tar --use-compress-prog=pxz -cf"
alias xxd='xxd -g 1'
alias ztar="tar --use-compress-prog=pigz"
alias ztarc="tar --use-compress-prog=pigz -cf"
# }}}

#
# g aliases {{{
#
LOG_FILE_NAME='log'
alias -g L='2>&1 |less -R'
alias -g G='2>&1 |grep --color=always'
alias -g RL='> ${LOG_FILE_NAME} 2>&1'
alias -g TL='2>&1 |tee ${LOG_FILE_NAME}'
alias -g FF='| ff'
# }}}

# 
# s aliases
#
alias -s tgz="ztar -xvf"
alias -s tbz="btar -xvf"
alias -s txz="xtar -xvf"

stty stop undef
stty -ixon -ixoff

chcp.com 65001
alias st="cygstart"

# keychain
#keychain $HOME/.ssh/id_rsa
#source $HOME/.keychain/`uname -n`-sh

#
# recompile zsh scripts {{{
#
if [ ! -f ${MISC_DIR}/.zshrc.win.zwc -o ${MISC_DIR}/.zshrc.win -nt ${MISC_DIR}/.zshrc.win.zwc ]; then
   zcompile ${MISC_DIR}/.zshrc.win
fi
if [ ! -f ~/.zshrc.zwc -o ~/.zshrc -nt ~/.zshrc.zwc ]; then
   zcompile ~/.zshrc
fi
# }}}

# percol
source ${MISC_DIR}/.percol.zsh

#
# plugins
#
source ${MISC_DIR}/zinit/zinit.zsh
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

zinit light b4b4r07/easy-oneliner
export EASY_ONE_REFFILE=${MISC_DIR}/easy-oneliner.txt
zinit light zsh-users/zaw
bindkey '^X^R' zaw-cdr
bindkey '^X^T' zaw
bindkey '^R' zaw-history
zstyle ':filter-select' rotate-list yes # enable rotation for filter-select
zstyle ':filter-select' hist-find-no-dups yes # ignore duplicates in history source
zstyle ':filter-select' case-insensitive yes # enable case-insensitive search

